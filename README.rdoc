= table-for

TableFor is a table builder for a collection of domain objects. It very easily allows the user to specify the columns to render and to override how the table, the header columns, the rows, and the columns are rendered.

== Installation

In <b>Rails 3 or Rails 4</b>, add this to your Gemfile.

  gem "table-for", :git => "git@github.com:hunterae/table-for.git"

== Example
The following example is purposely complex (in many cases, there are easier ways to do what is shown) in order to show a wide range of features that TableFor is capable of:

  <%= table_for @users, :table_html => { :class => "table table-hover table-bordered" },
                        :sortable => true,
                        :sort_url => sort_admin_users_path,
                        :link_namespace => :admin,
                        :data_row_html => {
                          :class => lambda { cycle('success', 'error', 'warning', 'info')},
                          :id => lambda { |user| "user-#{user.id}" }} do |table| %>
    <% table.column :data => "Modify", :link_action => :edit %>
    <% table.column :data => "Show", :link_url => lambda { |user| admin_user_path(user) } %>
    <% table.column :data => "Show 2.0", :link => true %>
    <% table.column :email, :header => "Email Address" %>
    <% table.column :first_name, :formatter => :downcase %>
    <% table.column :last_name, :formatter => Proc.new { |last_name| last_name.upcase } %>
    <% table.column :created_at, :formatter => [:strftime, "%m/%d/%y %I:%M %p"] %>
    <% table.column :updated_at,
                    :header => Proc.new {
                      content_tag(:span, :class => "badge badge-success") do
                        "Last Updated"
                      end
                    },
                    :sortable => false,
                    :header_column_html => { :style => "background-color:orange" },
                    :data => Proc.new { time_ago_in_words table.current_row.updated_at } %>
    <% table.column :full_name, :header => "Full Name", :order => "last_name, first_name" do |user| %>
      <%= "#{user.first_name} #{user.last_name}" %>
    <% end %>
    <% table.header :full_name do |column, options| %>
      <%= table.header_sort_link(column, options) do %>
        <span class="label label-important">FULL NAME</span>
      <% end %>
    <% end %>
    <% table.column :data => "Delete", :link_method => :delete, :link_confirm => "Are you sure?" %>
    <% table.footer do %>
      <div class="pull-right">
        <%= will_paginate @users %>
      </div>
    <% end %>
  <% end %>

Produces (with Twitter Bootstrap):

{<img src="https://raw.github.com/hunterae/table-for/master/example_table.png">}[http://example.com]

For detailed instructions on how to run this example, checkout the {Example Details}[https://github.com/hunterae/table-for/master/example.rdoc].

== table_for options
sortable:: (defaults to false) sets whether all columns are sortable by default
sort_url:: (defaults to "") sets the url for the header column links
link_namespace:: TODO
table_html:: TODO
thead_html:: TODO
table_row_html:: TODO
header_html:: TODO
header_row_html:: TODO
tbody_html:: TODO
data_row_html:: TODO
data_column_html:: TODO
tfoot_html:: TODO
footer_row_html:: TODO
footer_column_html:: TODO

== table_for column options
data:: TODO
header:: TODO
formatter:: TODO
sortable:: TODO
sort_url:: TODO
order:: TODO
link_url:: TODO
link_action:: TODO
link_method:: TODO
link_confirm:: TODO
link:: TODO
data_column_html:: TODO
header_column_html:: TODO
link_html

== table_for header options
TODO

== table_for footer options
TODO

== table_for configuration
TODO

== Using "Before" and "After" hooks
TODO